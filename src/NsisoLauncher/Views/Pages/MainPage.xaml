<Page x:Class="NsisoLauncher.Views.Pages.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:NsisoLauncher.Views.Pages"
      xmlns:vm="clr-namespace:NsisoLauncher.ViewModels.Pages"
      xmlns:userControl="clr-namespace:NsisoLauncher.Views.Controls"
      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
      xmlns:converters="clr-namespace:NsisoLauncher.Utils"
      xmlns:utils="clr-namespace:NsisoLauncher.Utils"
      xmlns:itemUtils="clr-namespace:MahAppsMetroHamburgerMenuNavigation.ViewModels"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="MainPage">
    <Page.DataContext>
        <vm:MainPageViewModel/>
    </Page.DataContext>
    <Page.Resources>
        <converters:VisualBrushTargetConverter x:Key="visualBrushTargetConverter"/>
        <converters:OppositeBooleanToVisibilityConverter x:Key="oppositeBooleanToVisibilityConverter"/>
        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type itemUtils:MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                <TextBlock Grid.Column="1"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <controls:TransitioningContentControl Content="{Binding}"
                                                  RestartTransitionOnContentChange="True"
                                                  Transition="Custom">
                            <controls:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                            KeyTime="00:00:00.300"
                                            Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="PreviousContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </controls:TransitioningContentControl.CustomVisualStates>
                        </controls:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <controls:HamburgerMenu x:Name="HamburgerMenuControl" DockPanel.Dock="Left"
                          DisplayMode="CompactInline"
                          IsPaneOpen="False"
                          ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                          ItemTemplate="{StaticResource MenuItemTemplate}"
                          OptionsItemTemplate="{StaticResource MenuItemTemplate}">
            <controls:HamburgerMenu.ItemsSource>
                <CompositeCollection>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=HomeSolid}" Label="开始游戏" NavigationDestination="Views/Pages/LaunchPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=CubesSolid}" Label="仓库"/>
                </CompositeCollection>
            </controls:HamburgerMenu.ItemsSource>
            <controls:HamburgerMenu.OptionsItemsSource>
                <CompositeCollection>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=CloudDownloadAltSolid}" Label="下载" NavigationDestination="Views/Pages/DownloadPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=CogSolid}" Label="设置" NavigationDestination="Views/Pages/SettingPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=UserSolid}" Label="用户" NavigationDestination="Views/Pages/UserPage.xaml"/>
                </CompositeCollection>
            </controls:HamburgerMenu.OptionsItemsSource>
        </controls:HamburgerMenu>

        <!--<Grid HorizontalAlignment="Right" Width="280" Background="White" Visibility="{Binding IsLaunching, Converter={StaticResource oppositeBooleanToVisibilityConverter}}">
            <userControl:MainPanelControl Margin="10"
                                          AuthNodesSource="{Binding AuthNodes, Mode=OneWay}" 
                                          VersionsSource="{Binding Versions, Mode=OneWay}"
                                          UsersSource="{Binding Users, Mode=OneWay}"
                                          SelectedVersion="{Binding LaunchVersion, Mode=TwoWay}"
                                          SelectedAuthNode="{Binding LaunchAuthNodePair, Mode=TwoWay}"
                                          UserNameText="{Binding LaunchUserNameText, Mode=TwoWay}"
                                          SelectedUserNode="{Binding LaunchUserPair, Mode=TwoWay}"
                                          LaunchCommand="{Binding LaunchCmd}"
                                          OpenDownloadingCommand="{Binding OpenDownloadingCmd}"
                                          OpenSettingCommand="{Binding OpenSettingCmd}"
                                          DownloadTaskCount="{Binding DownloadTaskCount}"
                                          />
        </Grid>-->
        <!--<ToggleButton Width="40" Height="40" Margin="0,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Right"
                      IsChecked="{Binding IsPlaying}"
                      Visibility="{Binding HasAudio, ElementName=mediaElement, Converter={StaticResource BooleanToVisibilityConverter}}"
                >
            <iconPacks:FontAwesome Kind="VolumeUpSolid"/>
        </ToggleButton>-->

        <!--<Grid Visibility="{Binding IsLaunching, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Rectangle>
                <Rectangle.Fill>
                    <VisualBrush Visual="{Binding ElementName=bgGrid}"/>
                </Rectangle.Fill>
                <Rectangle.Effect>
                    <BlurEffect Radius="20"/>
                </Rectangle.Effect>
            </Rectangle>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <controls:ProgressRing IsActive="{Binding IsLaunching}"/>
                <TextBlock Text="{StaticResource String.Mainwindow.Launching}" Foreground="White" TextAlignment="Center"
                           Margin="0,10,0,20"/>
                <Button Content="取消启动" Padding="10,0" Command="{Binding CancelLaunchingCmd}"/>
            </StackPanel>
            <TextBlock Text="{Binding LogLine}" Foreground="White" Background="{DynamicResource MahApps.Brushes.Accent}" TextAlignment="Right"
                       VerticalAlignment="Bottom" Padding="10,0"/>
        </Grid>-->
    </Grid>
</Page>
